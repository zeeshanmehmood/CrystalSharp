// <auto-generated />
using System;
using CrystalSharp.Tests.Common.MsSql.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrystalSharp.Tests.Common.Migrations.SqlServerMigrations
{
    [DbContext(typeof(MsSqlAppDbContext))]
    partial class MsSqlAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CrystalSharp.Tests.Common.MsSql.Aggregates.CurrencyAggregate.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("GlobalUId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("CrystalSharp.Tests.Common.MsSql.Aggregates.CurrencyAggregate.Currency", b =>
                {
                    b.OwnsOne("CrystalSharp.Tests.Common.MsSql.Aggregates.CurrencyAggregate.CurrencyInfo", "CurrencyInfo", b1 =>
                        {
                            b1.Property<int>("CurrencyId")
                                .HasColumnType("int");

                            b1.Property<string>("Code")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("NumericCode")
                                .HasColumnType("int");

                            b1.HasKey("CurrencyId");

                            b1.ToTable("Currency");

                            b1.WithOwner()
                                .HasForeignKey("CurrencyId");
                        });

                    b.Navigation("CurrencyInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
